name: Test Docker Hub Setup

on:
  workflow_dispatch:  # Manual trigger only

env:
  REGISTRY: docker.io
  IMAGE_NAME: lora-training-api

jobs:
  test-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker Hub Authentication
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Verify secrets are configured
        run: |
          echo "## üß™ Docker Hub Setup Test Results" >> $GITHUB_STEP_SUMMARY
          
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "‚ùå DOCKER_USERNAME secret is not configured" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "‚úÖ DOCKER_USERNAME secret is configured" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "‚ùå DOCKER_PASSWORD secret is not configured" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "‚úÖ DOCKER_PASSWORD secret is configured" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "‚úÖ Docker Hub authentication successful" >> $GITHUB_STEP_SUMMARY

      - name: Test Docker Build (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: test-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=test

      - name: Display Test Results
        run: |
          echo "## üéâ Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚úÖ Successful Tests:" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Hub authentication" >> $GITHUB_STEP_SUMMARY
          echo "- Secret configuration" >> $GITHUB_STEP_SUMMARY
          echo "- Docker image build" >> $GITHUB_STEP_SUMMARY
          echo "- Metadata extraction" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìã Configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Name**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Username**: ${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üè∑Ô∏è Generated Tags:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üöÄ **Your Docker Hub setup is ready!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Push to main branch to trigger CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "2. Create a release tag (e.g., v1.0.0) to trigger release workflow" >> $GITHUB_STEP_SUMMARY

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, message, author, job
          text: |
            üß™ Docker Hub setup test completed!
            Status: ${{ job.status }}
            ${{ job.status == 'success' && '‚úÖ Setup is working correctly!' || '‚ùå Setup needs attention - check the logs' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 